class UserList extends React.Component {
    render() {
        return (
            <tbody>
                {this.props.data.map((value, index) => {
                    return <User data={value} index={index + 1}/>
                })}
            </tbody>
        );
    }
}

class User extends React.Component {
    render() {
        return (
            <tr>
                <td className="index vert-align">{this.props.index}</td>
                <td><Avatar img={this.props.data.img} username={this.props.data.username}/></td>
                <td className="vert-align">{this.props.data.recent}</td>
                <td className="vert-align">{this.props.data.alltime}</td>
            </tr>
        );
    }
}

class Avatar extends React.Component {
    render() {
        return (
            <div className="avatar">
                <img className="img-responsive img-rounded" src={this.props.img}/>
                <a className="username" href={"https://freecodecamp.com/" + this.props.username} target="_blank">{this.props.username}</a>
            </div>
        );
    }
}

const Footer = () => {
  return (
    <footer>
        <div className="container-footer">
            <div>
                <p className="coded">Coded by thomlom</p>
            </div>
            <div>
                <a href="https://github.com/thomlom/" target="_blank"><i className="fa fa-github fa-2x"></i></a>
            </div>
        </div>
    </footer>
  )
}


class Leaderboard extends React.Component {
    constructor() {
      super();
      this.state = {
        userDataRecent: [],
        userDataAlltime: [],
        selected: "recent"
      };
    }

    componentDidMount() {
        $.get("https://fcctop100.herokuapp.com/api/fccusers/top/recent", function(data) {
            this.setState({userDataRecent: data});
        }.bind(this));

        $.get("https://fcctop100.herokuapp.com/api/fccusers/top/alltime", function(data) {
            this.setState({userDataAlltime: data});
        }.bind(this));
    }

    changeSelectedRecent() {
        this.setState({selected: "recent"});
    }

    changeSelectedAlltime() {
        this.setState({selected: "alltime"});
    }

    render() {
        return (
            <div className="container">
            <h1 className="text-center title"><i className="fa fa-free-code-camp"></i> Camper Leaderboard</h1>
                <table className="table table-responsive table-striped leaderboard">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Camper Name</th>
                            <th onClick={this.changeSelectedRecent.bind(this)}>Points in past 30 days <i className={this.state.selected === "recent"
                                    ? "fa fa-arrow-down"
                                    : ""}></i>
                            </th>
                            <th onClick={this.changeSelectedAlltime.bind(this)}>All time points <i className={this.state.selected === "alltime"
                                    ? "fa fa-arrow-down"
                                    : ""}></i>
                            </th>
                        </tr>
                    </thead>
                    <UserList data={this.state.selected === "recent"
                        ? this.state.userDataRecent
                        : this.state.userDataAlltime}/>
                </table>
                <hr/>
                <Footer/>
            </div>
        );
    }
}

ReactDOM.render(
    <Leaderboard/>, document.getElementById("app"));
